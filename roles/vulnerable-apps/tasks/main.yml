---

##### Juice Shop #####
- name: "Create directory for Juice Shop ({{ juiceshop_directory }})"
  file:
    path: "{{ juiceshop_directory }}"
    state: directory
  when: use_owasp_juiceshop

- name: Template out Juice Shop docker-compose file
  template:
    src: templates/compose-juiceshop.yaml.j2
    dest: "{{ juiceshop_compose_file }}"
  when: use_owasp_juiceshop

- name: Build and pull Juice Shop
  shell:
    cmd: |
      docker-compose -f {{juiceshop_compose_file}} build &&
      docker-compose -f {{juiceshop_compose_file}} pull
    chdir: "{{ juiceshop_directory }}"
  when: use_owasp_juiceshop

- name: Add Juice Shop start script
  template:
    src: templates/scripts/start-juice-shop.sh.j2
    dest: "{{ juiceshop_start_script }}"
    mode: '0744'
  when:
    - use_owasp_juiceshop
    - use_start_stop_scripts

- name: Add Juice Shop stop script
  template:
    src: templates/scripts/stop-juice-shop.sh.j2
    dest: "{{ juiceshop_stop_script }}"
    mode: '0744'
  when:
    - use_owasp_juiceshop
    - use_start_stop_scripts

- name: Delete Juice Shop containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{juiceshop_compose_file}} down --rmi all --volumes || true"
  when: not use_owasp_juiceshop

- name: Delete Juice Shop code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ juiceshop_directory }}"
    - "{{ juiceshop_start_script }}"
    - "{{ juiceshop_stop_script }}"
  when: not use_owasp_juiceshop

##### VulnLab #####
- name: "Create directory for Yavuzlar Vulnlab ({{ vulnlab_directory }})"
  file:
    path: "{{ vulnlab_directory }}"
    state: directory
  when: use_yavuzlar_vulnlab

- name: Template out Yavuzlar Vulnlab docker-compose file
  template:
    src: templates/compose-vulnlab.yaml.j2
    dest: "{{ vulnlab_compose_file }}"
  when: use_yavuzlar_vulnlab

- name: Build and pull Yavuzlar Vulnlab
  shell:
    cmd: |
      docker-compose -f {{vulnlab_compose_file}} build &&
      docker-compose -f {{vulnlab_compose_file}} pull
    chdir: "{{ vulnlab_directory }}"
  when: use_yavuzlar_vulnlab

- name: Add Yavuzlar Vulnlab start script
  template:
    src: templates/scripts/start-vulnlab.sh.j2
    dest: "{{ vulnlab_start_script }}"
    mode: '0744'
  when:
    - use_yavuzlar_vulnlab
    - use_start_stop_scripts

- name: Add Yavuzlar Vulnlab stop script
  template:
    src: templates/scripts/stop-vulnlab.sh.j2
    dest: "{{ vulnlab_stop_script }}"
    mode: '0744'
  when:
    - use_yavuzlar_vulnlab
    - use_start_stop_scripts

- name: Delete Yavuzlar Vulnlab containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{vulnlab_compose_file}} down --rmi all --volumes || true"
  when: not use_yavuzlar_vulnlab

- name: Delete Yavuzlar Vulnlab code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ vulnlab_directory }}"
    - "{{ vulnlab_start_script }}"
    - "{{ vulnlab_stop_script }}"
  when: not use_yavuzlar_vulnlab

##### RailsGoat #####
- name: "Clone RailsGoat repo to {{railsgoat_directory}}"
  git:
    repo: "{{ railsgoat_repo }}"
    dest: "{{ railsgoat_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_owasp_railsgoat

- name: Remove docker-compose file from cloned RailsGoat repo (to use a custom one)
  file:
    path: "{{railsgoat_directory}}/docker-compose.yml"
    state: absent
  when: use_owasp_railsgoat

- name: Template out RailsGoat docker-compose file
  template:
    src: templates/compose-railsgoat.yaml.j2
    dest: "{{ railsgoat_compose_file }}"
  when: use_owasp_railsgoat

- name: Build and pull RailsGoat
  shell:
    cmd: |
      docker-compose -f {{railsgoat_compose_file}} build &&
      docker-compose -f {{railsgoat_compose_file}} pull
    chdir: "{{ railsgoat_directory }}"
  when: use_owasp_railsgoat

- name: Add RailsGoat start script
  template:
    src: templates/scripts/start-railsgoat.sh.j2
    dest: "{{ railsgoat_start_script }}"
    mode: '0744'
  when:
    - use_owasp_railsgoat
    - use_start_stop_scripts

- name: Add RailsGoat stop script
  template:
    src: templates/scripts/stop-railsgoat.sh.j2
    dest: "{{ railsgoat_stop_script }}"
    mode: '0744'
  when:
    - use_owasp_railsgoat
    - use_start_stop_scripts

- name: Delete RailsGoat containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{railsgoat_compose_file}} down --rmi all --volumes || true"
  when: not use_owasp_railsgoat

- name: Delete RailsGoat code and start/stop scripts
  become: true # needed because railsgoat/tmp is owned by root
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ railsgoat_directory }}"
    - "{{ railsgoat_start_script }}"
    - "{{ railsgoat_stop_script }}"
  when: not use_owasp_railsgoat

##### DVWA #####
- name: "Clone DVWA repo to {{dvwa_directory}}"
  git:
    repo: "{{ dvwa_repo }}"
    dest: "{{ dvwa_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_dvwa

- name: Remove docker-compose file from cloned DVWA repo (to use a custom one)
  file:
    path: "{{dvwa_directory}}/compose.yml"
    state: absent
  when: use_dvwa

- name: Template out DVWA docker-compose file
  template:
    src: templates/compose-dvwa.yaml.j2
    dest: "{{ dvwa_compose_file }}"
  when: use_dvwa

- name: Build and pull DVWA
  shell:
    cmd: |
      docker-compose -f {{dvwa_compose_file}} build &&
      docker-compose -f {{dvwa_compose_file}} pull
    chdir: "{{ dvwa_directory }}"
  when: use_dvwa

- name: Add DVWA start script
  template:
    src: templates/scripts/start-dvwa.sh.j2
    dest: "{{ dvwa_start_script }}"
    mode: '0744'
  when:
    - use_dvwa
    - use_start_stop_scripts

- name: Add DVWA stop script
  template:
    src: templates/scripts/stop-dvwa.sh.j2
    dest: "{{ dvwa_stop_script }}"
    mode: '0744'
  when:
    - use_dvwa
    - use_start_stop_scripts

- name: Delete DVWA containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{dvwa_compose_file}} down --rmi all --volumes || true"
  when: not use_dvwa

- name: Delete DVWA code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ dvwa_directory }}"
    - "{{ dvwa_start_script }}"
    - "{{ dvwa_stop_script }}"
  when: not use_dvwa

##### DVGA #####
- name: "Create directory for DVGA ({{ dvga_directory }})"
  file:
    path: "{{ dvga_directory }}"
    state: directory
  when: use_dvga

- name: Template out DVGA docker-compose file
  template:
    src: templates/compose-dvga.yaml.j2
    dest: "{{ dvga_compose_file }}"
  when: use_dvga

- name: Build and pull DVGA
  shell:
    cmd: |
      docker-compose -f {{dvga_compose_file}} build &&
      docker-compose -f {{dvga_compose_file}} pull
    chdir: "{{ dvga_directory }}"
  when: use_dvga

- name: Add DVGA start script
  template:
    src: templates/scripts/start-dvga.sh.j2
    dest: "{{ dvga_start_script }}"
    mode: '0744'
  when:
    - use_dvga
    - use_start_stop_scripts

- name: Add DVGA stop script
  template:
    src: templates/scripts/stop-dvga.sh.j2
    dest: "{{ dvga_stop_script }}"
    mode: '0744'
  when:
    - use_dvga
    - use_start_stop_scripts

- name: Delete DVGA containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{dvga_compose_file}} down --rmi all --volumes || true"
  when: not use_dvga

- name: Delete DVGA code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ dvga_directory }}"
    - "{{ dvga_start_script }}"
    - "{{ dvga_stop_script }}"
  when: not use_dvga

##### NodeGoat #####
- name: "Clone NodeGoat repo to {{nodegoat_directory}}"
  git:
    repo: "{{ nodegoat_repo }}"
    dest: "{{ nodegoat_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_owasp_nodegoat

- name: Remove docker-compose file from cloned NodeGoat repo (to use a custom one)
  file:
    path: "{{nodegoat_directory}}/docker-compose.yml"
    state: absent
  when: use_owasp_nodegoat

- name: Template out NodeGoat docker-compose file
  template:
    src: templates/compose-nodegoat.yaml.j2
    dest: "{{ nodegoat_compose_file }}"
  when: use_owasp_nodegoat

- name: Build and pull NodeGoat
  shell:
    cmd: |
      docker-compose -f {{nodegoat_compose_file}} build &&
      docker-compose -f {{nodegoat_compose_file}} pull
  when: use_owasp_nodegoat

- name: Add NodeGoat start script
  template:
    src: templates/scripts/start-nodegoat.sh.j2
    dest: "{{ nodegoat_start_script }}"
    mode: '0744'
  when:
    - use_owasp_nodegoat
    - use_start_stop_scripts

- name: Add NodeGoat stop script
  template:
    src: templates/scripts/stop-nodegoat.sh.j2
    dest: "{{ nodegoat_stop_script }}"
    mode: '0744'
  when:
    - use_owasp_nodegoat
    - use_start_stop_scripts

- name: Delete NodeGoat containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{nodegoat_compose_file}} down --rmi all --volumes || true"
  when: not use_owasp_nodegoat

- name: Delete NodeGoat code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ nodegoat_directory }}"
    - "{{ nodegoat_start_script }}"
    - "{{ nodegoat_stop_script }}"
  when: not use_owasp_nodegoat

##### WebGoat #####
- name: "Create directory for WebGoat ({{ webgoat_directory }})"
  file:
    path: "{{ webgoat_directory }}"
    state: directory
  when: use_webgoat

- name: Template out WebGoat docker-compose file
  template:
    src: templates/compose-webgoat.yaml.j2
    dest: "{{ webgoat_compose_file }}"
  when: use_webgoat

- name: Build and pull WebGoat
  shell:
    cmd: |
      docker-compose -f {{webgoat_compose_file}} build &&
      docker-compose -f {{webgoat_compose_file}} pull
    chdir: "{{ webgoat_directory }}"
  when: use_webgoat

- name: Add WebGoat start script
  template:
    src: templates/scripts/start-webgoat.sh.j2
    dest: "{{ webgoat_start_script }}"
    mode: '0744'
  when:
    - use_webgoat
    - use_start_stop_scripts

- name: Add WebGoat stop script
  template:
    src: templates/scripts/stop-webgoat.sh.j2
    dest: "{{ webgoat_stop_script }}"
    mode: '0744'
  when:
    - use_webgoat
    - use_start_stop_scripts

- name: Delete WebGoat containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{webgoat_compose_file}} down --rmi all --volumes || true"
  when: not use_webgoat

- name: Delete WebGoat code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ webgoat_directory }}"
    - "{{ webgoat_start_script }}"
    - "{{ webgoat_stop_script }}"
  when: not use_webgoat

##### Mutillidae #####
- name: "Clone Mutillidae repo to {{mutillidae_directory}}"
  git:
    repo: "{{ mutillidae_repo }}"
    dest: "{{ mutillidae_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_mutillidae

- name: Remove docker-compose file from cloned Mutillidae repo (to use a custom one)
  file:
    path: "{{ mutillidae_compose_file }}"
    state: absent
  when: use_mutillidae

- name: Template out Mutillidae docker-compose file
  template:
    src: templates/compose-mutillidae.yaml.j2
    dest: "{{ mutillidae_compose_file }}"
  when: use_mutillidae

- name: Build and pull Mutillidae
  shell:
    cmd: |
      docker-compose -f {{mutillidae_compose_file}} build &&
      docker-compose -f {{mutillidae_compose_file}} pull
    chdir: "{{mutillidae_directory}}"
  when: use_mutillidae

- name: Add Mutillidae start script
  template:
    src: templates/scripts/start-mutillidae.sh.j2
    dest: "{{ mutillidae_start_script }}"
    mode: '0744'
  when:
    - use_mutillidae
    - use_start_stop_scripts

- name: Add Mutillidae stop script
  template:
    src: templates/scripts/stop-mutillidae.sh.j2
    dest: "{{ mutillidae_stop_script }}"
    mode: '0744'
  when:
    - use_mutillidae
    - use_start_stop_scripts

- name: Delete Mutillidae containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{mutillidae_compose_file}} down --rmi all --volumes || true"
  when: not use_mutillidae

- name: Delete Mutillidae code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ mutillidae_directory }}"
    - "{{ mutillidae_start_script }}"
    - "{{ mutillidae_stop_script }}"
  when: not use_mutillidae

##### crAPI #####
- name: "Create crAPI directory {{crAPI_directory}}"
  file:
    path: "{{ crAPI_directory }}"
    state: directory
  when: use_crAPI

- name: Download crAPI docker-compose file ({{crAPI_compose_file_url}})
  get_url:
    url: "{{ crAPI_compose_file_url }}"
    dest: "{{ crAPI_compose_file }}"
  when: use_crAPI

- name: Pull crAPI images
  command:
    cmd: docker-compose -f {{crAPI_compose_file}} pull
    chdir: "{{ crAPI_directory }}"
  when: use_crAPI

- name: Add crAPI start script
  template:
    src: templates/scripts/start-crAPI.sh.j2
    dest: "{{ crAPI_start_script }}"
    mode: '0744'
  when:
    - use_crAPI
    - use_start_stop_scripts

- name: Add crAPI stop script
  template:
    src: templates/scripts/stop-crAPI.sh.j2
    dest: "{{ crAPI_stop_script }}"
    mode: '0744'
  when:
    - use_crAPI
    - use_start_stop_scripts

- name: Delete crAPI containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{crAPI_compose_file}} down --rmi all --volumes || true"
  when: not use_crAPI

- name: Delete crAPI code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ crAPI_directory }}"
    - "{{ crAPI_start_script }}"
    - "{{ crAPI_stop_script }}"
  when: not use_crAPI

##### SSRF Lab #####
- name: "Clone SSRF lab repo to {{ssrf_lab_directory}}"
  git:
    repo: "{{ ssrf_lab_repo }}"
    dest: "{{ ssrf_lab_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_ssrf_lab

- name: Template out SSRF lab docker-compose file
  template:
    src: templates/compose-ssrf-lab.yaml.j2
    dest: "{{ ssrf_lab_compose_file }}"
  when: use_ssrf_lab

- name: Build and pull SSRF lab
  shell:
    chdir: "{{ssrf_lab_directory}}"
    cmd: |
      docker-compose -f {{ssrf_lab_compose_file}} build &&
      docker-compose -f {{ssrf_lab_compose_file}} pull
  when: use_ssrf_lab

- name: Add SSRF lab start script
  template:
    src: templates/scripts/start-ssrf-lab.sh.j2
    dest: "{{ ssrf_lab_start_script }}"
    mode: '0744'
  when:
    - use_ssrf_lab
    - use_start_stop_scripts

- name: Add SSRF lab stop script
  template:
    src: templates/scripts/stop-ssrf-lab.sh.j2
    dest: "{{ ssrf_lab_stop_script }}"
    mode: '0744'
  when:
    - use_ssrf_lab
    - use_start_stop_scripts

- name: Delete SSRF lab containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{ssrf_lab_compose_file}} down --rmi all --volumes || true"
  when: not use_ssrf_lab

- name: Delete SSRF lab code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ ssrf_lab_directory }}"
    - "{{ ssrf_lab_start_script }}"
    - "{{ ssrf_lab_stop_script }}"
  when: not use_ssrf_lab

##### CI/CD Goat #####
- name: "Create directory for CI/CD Goat ({{ cicdgoat_directory }})"
  file:
    path: "{{ cicdgoat_directory }}"
    state: directory
  when: use_cicdgoat

- name: Download CI/CD Goat docker-compose file from GitHub
  get_url:
    url: "{{cicdgoat_compose_url}}"
    dest: "{{cicdgoat_compose_file}}"
  when:
    - use_cicdgoat

- name: Build and pull CI/CD Goat
  shell: |
    docker-compose -f {{cicdgoat_compose_file}} build &&
    docker-compose -f {{cicdgoat_compose_file}} pull
  when: use_cicdgoat

- name: Add CI/CD Goat start script
  template:
    src: templates/scripts/start-cicdgoat.sh.j2
    dest: "{{ cicdgoat_start_script }}"
    mode: '0744'
  when:
    - use_cicdgoat
    - use_start_stop_scripts

- name: Add CI/CD Goat stop script
  template:
    src: templates/scripts/stop-cicdgoat.sh.j2
    dest: "{{ cicdgoat_stop_script }}"
    mode: '0744'
  when:
    - use_cicdgoat
    - use_start_stop_scripts

- name: Delete CI/CD Goat containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{cicdgoat_compose_file}} down --rmi all --volumes || true"
  when: not use_cicdgoat

- name: Delete CI/CD Goat code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ cicdgoat_directory }}"
    - "{{ cicdgoat_start_script }}"
    - "{{ cicdgoat_stop_script }}"
  when: not use_cicdgoat

##### VAmPI #####
- name: "Clone VAmPI repo to {{VAmPI_directory}}"
  git:
    repo: "{{ VAmPI_repo }}"
    dest: "{{ VAmPI_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_VAmPI

- name: Remove docker-compose file from cloned VAmPI repo (to use a custom one)
  file:
    path: "{{VAmPI_directory}}/docker-compose.yaml"
    state: absent
  when: use_VAmPI

- name: Template out VAmPI lab docker-compose file
  template:
    src: templates/compose-VAmPI.yaml.j2
    dest: "{{ VAmPI_compose_file }}"
  when: use_VAmPI

- name: Build and pull VAmPI
  shell:
    chdir: "{{VAmPI_directory}}"
    cmd: |
      docker-compose -f {{VAmPI_compose_file}} build &&
      docker-compose -f {{VAmPI_compose_file}} pull
  when: use_VAmPI

- name: Add VAmPI start script
  template:
    src: templates/scripts/start-VAmPI.sh.j2
    dest: "{{ VAmPI_start_script }}"
    mode: '0744'
  when:
    - use_VAmPI
    - use_start_stop_scripts

- name: Add VAmPI stop script
  template:
    src: templates/scripts/stop-VAmPI.sh.j2
    dest: "{{ VAmPI_stop_script }}"
    mode: '0744'
  when:
    - use_VAmPI
    - use_start_stop_scripts

- name: Delete VAmPI containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{VAmPI_compose_file}} down --rmi all --volumes || true"
  when: not use_VAmPI

- name: Delete VAmPI code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ VAmPI_directory }}"
    - "{{ VAmPI_start_script }}"
    - "{{ VAmPI_stop_script }}"
  when: not use_VAmPI

##### DVWS-Node #####
- name: "Clone DVWS repo to {{dvws_directory}}"
  git:
    repo: "{{ dvws_repo }}"
    dest: "{{ dvws_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_dvws

- name: Remove docker-compose file from cloned DVWS repo (to use a custom one)
  file:
    path: "{{dvws_directory}}/docker-compose.yml"
    state: absent
  when: use_dvws

- name: Template out DVWS lab docker-compose file
  template:
    src: templates/compose-dvws-node.yaml.j2
    dest: "{{ dvws_compose_file }}"
  when: use_dvws

- name: Build DVWS
  command:
    chdir: "{{dvws_directory}}"
    cmd: docker-compose -f {{dvws_compose_file}} build
  when: use_dvws

- name: Add DVWS start script
  template:
    src: templates/scripts/start-dvws.sh.j2
    dest: "{{ dvws_start_script }}"
    mode: '0744'
  when:
    - use_dvws
    - use_start_stop_scripts

- name: Add DVWS stop script
  template:
    src: templates/scripts/stop-dvws.sh.j2
    dest: "{{ dvws_stop_script }}"
    mode: '0744'
  when:
    - use_dvws
    - use_start_stop_scripts

- name: Delete DVWS containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{dvws_compose_file}} down --rmi all --volumes || true"
  when: not use_dvws

- name: Delete DVWS code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ dvws_directory }}"
    - "{{ dvws_start_script }}"
    - "{{ dvws_stop_script }}"
  when: not use_dvws

##### Security Shepherd #####
- name: "Clone Security Shepherd repo to {{shepherd_directory}}"
  git:
    repo: "{{ shepherd_repo }}"
    dest: "{{ shepherd_directory }}"
    force: true # needed due to using a custom .env file
  when: use_shepherd

- name: Remove .env file from cloned Security Shepherd repo (to use a custom one)
  file:
    path: "{{shepherd_env_file}}"
    state: absent
  when: use_shepherd

- name: Template out Security Shepherd lab .env file
  template:
    src: templates/shepherd-env.j2
    dest: "{{ shepherd_env_file }}"
  when: use_shepherd

- name: Install Security Shepherd prerequisites
  become: true
  apt:
    pkg:
      - maven
      - default-jdk
    state: present
  when: use_shepherd

- name: Generate Security Shepherd WAR file and HTTPS cert
  command:
    cmd: mvn -Pdocker clean install -DskipTests
    chdir: "{{ shepherd_directory }}"
  when: use_shepherd

- name: Build and pull Security Shepherd
  command:
    chdir: "{{shepherd_directory}}"
    cmd: |
      docker-compose -f {{shepherd_compose_file}} build --pull
  when: use_shepherd

- name: Add Security Shepherd start script
  template:
    src: templates/scripts/start-security-shepherd.sh.j2
    dest: "{{ shepherd_start_script }}"
    mode: '0744'
  when:
    - use_shepherd
    - use_start_stop_scripts

- name: Add Security Shepherd stop script
  template:
    src: templates/scripts/stop-security-shepherd.sh.j2
    dest: "{{ shepherd_stop_script }}"
    mode: '0744'
  when:
    - use_shepherd
    - use_start_stop_scripts

- name: Delete Security Shepherd containers, images, volumes, and networks
  shell:
    cmd: "docker-compose -f {{shepherd_compose_file}} down --rmi all --volumes || true"
  when: not use_shepherd

- name: Delete Security Shepherd code and start/stop scripts
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ shepherd_directory }}"
    - "{{ shepherd_start_script }}"
    - "{{ shepherd_stop_script }}"
  when: not use_shepherd