---

##### Juice Shop #####
- name: "Create directory for Juice Shop ({{ juiceshop_directory }})"
  file:
    path: "{{ juiceshop_directory }}"
    state: directory
  when: use_owasp_juiceshop

- name: Template out Juice Shop docker-compose file
  template:
    src: templates/compose-juiceshop.yaml.j2
    dest: "{{ juiceshop_compose_file }}"
  when: use_owasp_juiceshop

- name: Build and pull Juice Shop
  shell:
    cmd: |
      docker-compose -f {{juiceshop_compose_file}} build &&
      docker-compose -f {{juiceshop_compose_file}} pull
    chdir: "{{ juiceshop_directory }}"
  when: use_owasp_juiceshop

- name: Start Juice Shop
  command:
    cmd: "docker-compose -f {{juiceshop_compose_file}} up --detach"
  when:
    - use_owasp_juiceshop
    - autostart_enabled_apps

##### VulnLab #####
- name: "Create directory for Yavuzlar Vulnlab ({{ vulnlab_directory }})"
  file:
    path: "{{ vulnlab_directory }}"
    state: directory
  when: use_yavuzlar_vulnlab

- name: Template out Yavuzlar Vulnlab docker-compose file
  template:
    src: templates/compose-vulnlab.yaml.j2
    dest: "{{ vulnlab_compose_file }}"
  when: use_yavuzlar_vulnlab

- name: Build and pull Yavuzlar Vulnlab
  shell:
    cmd: |
      docker-compose -f {{vulnlab_compose_file}} build &&
      docker-compose -f {{vulnlab_compose_file}} pull
    chdir: "{{ vulnlab_directory }}"
  when: use_yavuzlar_vulnlab

- name: Start Yavuzlar Vulnlab
  command:
    chdir: "{{ vulnlab_directory }}"
    cmd: docker-compose up --detach
  when:
    - use_yavuzlar_vulnlab
    - autostart_enabled_apps

##### RailsGoat #####
- name: "Clone RailsGoat repo to {{railsgoat_directory}}"
  git:
    repo: "{{ railsgoat_repo }}"
    dest: "{{ railsgoat_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_owasp_railsgoat

- name: Remove docker-compose file from cloned RailsGoat repo (to use a custom one)
  file:
    path: "{{railsgoat_directory}}/docker-compose.yml"
    state: absent
  when: use_owasp_railsgoat

- name: Template out RailsGoat docker-compose file
  template:
    src: templates/compose-railsgoat.yaml.j2
    dest: "{{ railsgoat_compose_file }}"
  when: use_owasp_railsgoat

- name: Build and pull RailsGoat
  shell:
    cmd: |
      docker-compose -f {{railsgoat_compose_file}} build &&
      docker-compose -f {{railsgoat_compose_file}} pull
    chdir: "{{ railsgoat_directory }}"
  when: use_owasp_railsgoat

- name: Start RailsGoat
  command:
    cmd: "docker-compose -f {{railsgoat_compose_file}} up --detach"
  when:
    - use_owasp_railsgoat
    - autostart_enabled_apps

##### DVWA #####
- name: "Clone DVWA repo to {{dvwa_directory}}"
  git:
    repo: "{{ dvwa_repo }}"
    dest: "{{ dvwa_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_dvwa

- name: Remove docker-compose file from cloned DVWA repo (to use a custom one)
  file:
    path: "{{dvwa_directory}}/compose.yml"
    state: absent
  when: use_dvwa

- name: Template out DVWA docker-compose file
  template:
    src: templates/compose-dvwa.yaml.j2
    dest: "{{ dvwa_compose_file }}"
  when: use_dvwa

- name: Build and pull DVWA
  shell:
    cmd: |
      docker-compose -f {{dvwa_compose_file}} build &&
      docker-compose -f {{dvwa_compose_file}} pull
    chdir: "{{ dvwa_directory }}"
  when: use_dvwa

- name: Start DVWA
  command:
    cmd: "docker-compose -f {{dvwa_compose_file}} up --detach"
  when:
    - use_dvwa
    - autostart_enabled_apps

##### DVGA #####
- name: "Create directory for DVGA ({{ dvga_directory }})"
  file:
    path: "{{ dvga_directory }}"
    state: directory
  when: use_dvga

- name: Template out DVGA docker-compose file
  template:
    src: templates/compose-dvga.yaml.j2
    dest: "{{ dvga_compose_file }}"
  when: use_dvga

- name: Build and pull DVGA
  shell:
    cmd: |
      docker-compose -f {{dvga_compose_file}} build &&
      docker-compose -f {{dvga_compose_file}} pull
    chdir: "{{ dvga_directory }}"
  when: use_dvga

- name: Start DVGA
  command:
    cmd: "docker-compose -f {{dvga_compose_file}} up --detach"
  when:
    - use_dvga
    - autostart_enabled_apps

##### NodeGoat #####
- name: "Clone NodeGoat repo to {{nodegoat_directory}}"
  git:
    repo: "{{ nodegoat_repo }}"
    dest: "{{ nodegoat_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_owasp_nodegoat

- name: Remove docker-compose file from cloned NodeGoat repo (to use a custom one)
  file:
    path: "{{nodegoat_directory}}/docker-compose.yml"
    state: absent
  when: use_owasp_nodegoat

- name: Template out NodeGoat docker-compose file
  template:
    src: templates/compose-nodegoat.yaml.j2
    dest: "{{ nodegoat_compose_file }}"
  when: use_owasp_nodegoat

- name: Build and pull NodeGoat
  shell:
    cmd: |
      docker-compose -f {{nodegoat_compose_file}} build &&
      docker-compose -f {{nodegoat_compose_file}} pull
  when: use_owasp_nodegoat

- name: Start NodeGoat
  command:
    cmd: "docker-compose -f {{nodegoat_compose_file}} up --detach"
  when:
    - use_owasp_nodegoat
    - autostart_enabled_apps

##### WebGoat #####
- name: "Create directory for WebGoat ({{ webgoat_directory }})"
  file:
    path: "{{ webgoat_directory }}"
    state: directory
  when: use_webgoat

- name: Template out WebGoat docker-compose file
  template:
    src: templates/compose-webgoat.yaml.j2
    dest: "{{ webgoat_compose_file }}"
  when: use_webgoat

- name: Build and pull WebGoat
  shell:
    cmd: |
      docker-compose -f {{webgoat_compose_file}} build &&
      docker-compose -f {{webgoat_compose_file}} pull
    chdir: "{{ webgoat_directory }}"
  when: use_webgoat

- name: Start WebGoat
  command:
    cmd: "docker-compose -f {{webgoat_compose_file}} up --detach"
  when:
    - use_webgoat
    - autostart_enabled_apps

##### Mutillidae #####
- name: "Clone Mutillidae repo to {{mutillidae_directory}}"
  git:
    repo: "{{ mutillidae_repo }}"
    dest: "{{ mutillidae_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_mutillidae

- name: Remove docker-compose file from cloned Mutillidae repo (to use a custom one)
  file:
    path: "{{mutillidae_directory}}/docker-compose.yml"
    state: absent
  when: use_mutillidae

- name: Template out Mutillidae docker-compose file
  template:
    src: templates/compose-mutillidae.yaml.j2
    dest: "{{ mutillidae_compose_file }}"
  when: use_mutillidae

- name: Build and pull Mutillidae
  shell:
    cmd: |
      docker-compose -f {{mutillidae_compose_file}} build &&
      docker-compose -f {{mutillidae_compose_file}} pull
    chdir: "{{mutillidae_directory}}"
  when: use_mutillidae

- name: Start Mutillidae
  command:
    cmd: "docker-compose -f {{mutillidae_compose_file}} up --detach"
  when:
    - use_mutillidae
    - autostart_enabled_apps

##### crAPI #####
- name: "Clone crAPI repo to {{crAPI_directory}}"
  git:
    repo: "{{ crAPI_repo }}"
    dest: "{{ crAPI_directory }}"
    force: true # running crAPI modifies files within the project directory
  when: use_crAPI

- name: Build and pull crAPI
  shell:
    cmd: |
      docker-compose -f {{crAPI_compose_file}} build &&
      docker-compose -f {{crAPI_compose_file}} pull
    chdir: "{{ crAPI_directory }}"
  when: use_crAPI

- name: Start crAPI
  command:
    cmd: "docker-compose -f {{crAPI_compose_file}} --compatibility up --detach"
  when:
    - use_crAPI
    - autostart_enabled_apps

##### CI/CD Goat #####
- name: "Create directory for CI/CD Goat ({{ cicdgoat_directory }})"
  file:
    path: "{{ cicdgoat_directory }}"
    state: directory
  when: use_cicdgoat

- name: Download CI/CD Goat docker-compose file from GitHub
  get_url:
    url: "{{cicdgoat_compose_url}}"
    dest: "{{cicdgoat_compose_file}}"
  when:
    - use_cicdgoat

- name: Build and pull CI/CD Goat
  shell: |
    docker-compose -f {{cicdgoat_compose_file}} build &&
    docker-compose -f {{cicdgoat_compose_file}} pull
  when: use_cicdgoat

- name: Start CI/CD Goat
  command:
    cmd: "docker-compose -f {{cicdgoat_compose_file}} up --detach"
  when:
    - use_cicdgoat
    - autostart_enabled_apps

##### VAmPI #####
- name: "Clone VAmPI repo to {{VAmPI_directory}}"
  git:
    repo: "{{ VAmPI_repo }}"
    dest: "{{ VAmPI_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_VAmPI

- name: Remove docker-compose file from cloned VAmPI repo (to use a custom one)
  file:
    path: "{{VAmPI_directory}}/docker-compose.yaml"
    state: absent
  when: use_VAmPI

- name: Template out VAmPI lab docker-compose file
  template:
    src: templates/compose-VAmPI.yaml.j2
    dest: "{{ VAmPI_compose_file }}"
  when: use_VAmPI

- name: Build and pull VAmPI
  shell:
    chdir: "{{VAmPI_directory}}"
    cmd: |
      docker-compose -f {{VAmPI_compose_file}} build &&
      docker-compose -f {{VAmPI_compose_file}} pull
  when: use_VAmPI

- name: Start VAmPI
  command:
    cmd: "docker-compose -f {{VAmPI_compose_file}} up --detach"
  when:
    - use_VAmPI
    - autostart_enabled_apps

##### DVWS-Node #####
- name: "Clone DVWS repo to {{dvws_directory}}"
  git:
    repo: "{{ dvws_repo }}"
    dest: "{{ dvws_directory }}"
    force: true # needed due to using a custom docker-compose file
  when: use_dvws

- name: Remove docker-compose file from cloned DVWS repo (to use a custom one)
  file:
    path: "{{dvws_directory}}/docker-compose.yml"
    state: absent
  when: use_dvws

- name: Template out DVWS lab docker-compose file
  template:
    src: templates/compose-dvws-node.yaml.j2
    dest: "{{ dvws_compose_file }}"
  when: use_dvws

- name: Build DVWS
  command:
    chdir: "{{dvws_directory}}"
    cmd: docker-compose -f {{dvws_compose_file}} build
  when: use_dvws

- name: Start DVWS
  command:
    cmd: "docker-compose -f {{dvws_compose_file}} up --detach"
  when:
    - use_dvws
    - autostart_enabled_apps

##### Security Shepherd #####
- name: "Clone Security Shepherd repo to {{shepherd_directory}}"
  git:
    repo: "{{ shepherd_repo }}"
    dest: "{{ shepherd_directory }}"
    force: true # needed due to using a custom .env file
  when: use_shepherd

- name: Remove .env file from cloned Security Shepherd repo (to use a custom one)
  file:
    path: "{{shepherd_env_file}}"
    state: absent
  when: use_shepherd

- name: Template out Security Shepherd lab .env file
  template:
    src: templates/shepherd-env.j2
    dest: "{{ shepherd_env_file }}"
  when: use_shepherd

- name: Install Security Shepherd prerequisites
  become: true
  apt:
    pkg:
      - maven
      - default-jdk
    state: present
  when: use_shepherd

- name: Generate Security Shepherd WAR file and HTTPS cert
  command:
    cmd: mvn -Pdocker clean install -DskipTests
    chdir: "{{ shepherd_directory }}"
  when: use_shepherd

- name: Build and pull Security Shepherd
  command:
    chdir: "{{shepherd_directory}}"
    cmd: |
      docker-compose -f {{shepherd_compose_file}} build --pull
  when: use_shepherd

- name: Start Security Shepherd
  command:
    cmd: "docker-compose -f {{shepherd_compose_file}} up --detach"
  when:
    - use_shepherd
    - autostart_enabled_apps